class Solution {
  public:
    int burn(Node *root, int target, int &timer)
    {
        if(!root)
        return 0;
        
        if(root->data == target)
        return -1;
        
        int left = burn(root->left,target,timer);
        int right= burn(root->right,target,timer);
        
        if(left<0){
            timer = max(timer,abs(left)+right);
            return left -1;
        }
        
        if(right<0){
            timer = max(timer,abs(right)+left);
            return right -1;
        }
        return max(left,right) + 1;
    }
    
    void find(Node *root, int target, Node *&temp)
    {
        if(!root)
        return;
        
        if(root->data == target){
            temp = root;
            return;
        }
        
        find(root->left,target,temp);
        find(root->right,target,temp);
    }
    
    int height(Node *root){
        if(!root)
        return 0;
        
        return 1 + max(height(root->left),height(root->right));
    }
  
    int minTime(Node* root, int target) 
    {
        // Your code goes here
        
        int timer = 0;
        
        burn(root,target,timer);
        Node *temp;
        find(root,target,temp);
        int num = height(temp)-1;
        return max(timer,num);
    }
};
